212

International Journal of Fuzzy Systems, Vol. 7, No. 4, December 2005

- hasProvider collects a list of instances of Provider class. - hasVariable collects a list of instances of Variable class. - hasProvider collects a list of instances of Condition class. - messageType indicates the purpose of an ASDL document sending to the middle agent. The possible value of this property may be RARequest, SARequest, Advertise, and Delete. RARequest and SARequest are used to handle different request messages sending by request agents and service agents, respectively. Advertise and Delete are used to publish or un-publish a service by service agents. - source is used to indicate the service provided is a web service or an agent service. Two possible values are used, namely WebService and AgentService. - searchBy is used by the middle agent to perform different filtering strategies in service matchmaking. The middle agent reduces the search space down by filtering out irrelevant services. The values of the property are ServiceName, ServiceCategory, and ServiceProvider. In SAM, the ServiceCategory is the default filtering strategies to find services in relevant service category that a request agent is searching. - requestType is primarily used by a request agent. Two possible values can be filled, namely Computer and User. A user can assign the Computer value to grant the request agent with the authority to access the matched services automatically based on his/her preferences. Otherwise, the default value User is used to give the decision back to the user. Provider: The Provider class provides information of the service provider for human reading mainly. It is composed of the properties including providerName, providerDescription, providerContacts, and providerWebURL. - providerName refers to the name of the service provider. - providerDescription is a brief description of the service provider. - providerContacts contains a list of contact information. - providerWebURL is the web site URL of the service provider. Variable: The class Variable is used as a superclass of other variables. In SAM, there are three types of variables: Input_Variable, Output_Variable, and Condition_Variable.

During the invocation of services, the service agents or web services need the input variables, which are subclasses of Input_Variable, to perform the services and produce the output variables, which are subclasses of Output_Variable, for the request agents. Condition variables, which are subclasses Condition\Variable, are used as decorators to describe additional attributes of a service. A condition variable can also be either an input variable or an output variable. The Variable class has a property hasValue only. - hasValue refers to the instances of the restricted classes defining in a subclass of Variable. The classes may be predefined elements in XML schema specification or be defined in a DAML+OIL ontology. When specifying a subclass of Variable in a specific service profile ontology, we also restrict the data types or potential values of its instances. This design will facilitate to generate a user interface of an ASDL document for publishing or requesting services. Condition: The class Condition is used by agents or web services to describe the services they provide or need. In order to describe the services more precisely, we group the subclasses of Condition into domains for using. It contains two properties, included conditionValue and conditionType. A condition, precondition or post-condition, of a service then can be presented by an instance of Condition. Finally, these conditions are processed by the middle agent to perform PPN-based service matchmaking. - conditionValue refers to an instance of Condition_Variable. It is the main part of a condition. - conditionType is used to provide a more powerful logical description of a condition. The possible value for this property is AND or OR. We can use this property in the case that there are multiple values of condtionValue property specified in a condition instance.

Appendix B Specification of Grounding Ontology in SAM-ASDL
The detail of each concept and property defined in the grounding ontology of the SAM-ASDL are as follows: AgentGrounding: The class AgentGrounding is used to indicate that the service is provided by a service agent, which contains several attributes such as agentURL, agentName, and hsaTasks. - agentURL keeps the URL information of the

