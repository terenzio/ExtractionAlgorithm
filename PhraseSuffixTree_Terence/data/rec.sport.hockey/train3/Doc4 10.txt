ASPECT-ENHANCED GOAL-DRIVEN SEQUENCE DIAGRAM

721

∑ WeaveOPinsert is denoted as insert. An insert fragment has a subfragment that deﬁnes an aspectual scenario to be inserted into the trace of message passing. When this insert fragment is reached and the guard condition of this fragment is satisﬁed, namely the corresponding join point condition is satisﬁed, the weaver will insert the aspectual behavior into the sequence of messages of the base behavior. The insertion will interrupt and take over control of execution until the insert fragment ends its execution. ∑ WeaveOPinsertPar is denoted as insertPar. An insertPar fragment has only one subfragment that deﬁnes an aspectual scenario to be inserted into the trace of message passing. When this insertPar fragment is reached and the guard condition of this fragment is satisﬁed, the weaver will insert the aspectual behavior into the sequence of messages concurrently. The insertion will not interrupt the execution of base behavior. ∑ WeaveOPreplace is denoted as replace. A replace fragment has two subfragments: One deﬁnes a piece of base scenario to be replaced, and the other deﬁnes an aspectual scenario. When replace fragment is reached and the guard condition of this fragment is satisﬁed, the weaver will replace the base behavior speciﬁed in the ﬁrst subfragment with the aspectual behavior described in the second subfragment. ∑ WeaveOPIDC is denoted as idc. An idc fragment has two subfragments: One deﬁnes a piece of base scenario to be imposed on a duration constraint, and the other deﬁnes the scenario that the duration constraint has been affected. When idc fragment is reached and the guard condition of this fragment is satisﬁed, the weaver will replace the base behavior speciﬁed in the ﬁrst subfragment with the second subfragment. ∑ WeaveOPITC is denoted as itc. An itc fragment has two subfragments: One deﬁnes a piece of base scenario to be imposed on a timing constraint, and the other deﬁnes the scenario that the timing constraint has been inﬂuenced. When itc fragment is reached and the guard condition of this fragment is satisﬁed, the weaver will replace the base behavior speciﬁed in the ﬁrst subfragment with second subfragment. ∑ WeaveOPISI is denoted as isi. An isi fragment has two subfragments: One deﬁnes a piece of base scenario to be imposed on a state invariance constraint, and the other deﬁnes the scenario upon which the state invariance constraint has been impacted. When isi fragment is reached and the guard condition of this fragment is satisﬁed, the weaver will replace the base behavior speciﬁed in the ﬁrst subfragment with the second subfragment.

3.2.2. Model Weaving Behavior Figure 4 provides a conceptual view of the proposed aspect weaving mechanism to facilitate the merge of aspectual behavior into base use cases' behavior. There are three roles involved in this sequence diagram: GoalImp, Weaver, and AspectImp. The GoalImp role represents a set of objects in a base use case. These objects cooperate with each other to achieve the goal associated with GoalImp. The AspectImp role represents a set of objects that are meant to be woven into the base use case to address the crosscutting concerns modeled in AspectImp. The weaving activities are conducted by executing the trace of the message ﬂows of the Weaver. The activities carried out by Weaver are as follows:
1. The Weaver sends an inquiry to AspectImp to obtain information needed for performing weaving operation, including join points, aspectual behavior, and the types of weaving operations. 2. The Weaver performs a series of inspections on the states of objects associated with base use cases to locate appropriate weaving points. The notion of appropriateness is meant to describe a situation that the states of objects match the conditions described in the join point acquired from AspectImp.
International Journal of Intelligent Systems DOI 10.1002/int

