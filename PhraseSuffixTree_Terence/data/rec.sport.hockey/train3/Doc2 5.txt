588

IEEE TRANSACTIONS ON SOFTWARE ENGINEERING,

VOL. 40,

NO. 6,

JUNE 2014

Fig. 5. GEA system architecture. Fig. 4. Illustration of the concept of similarity.

same set of effects that are contributed by their corresponding use cases, and behave similarly as shown on the right hand side of Fig. 3. Therefore, it is our aim to find out those goals that share common properties for discovering early aspects. In the proposed approach, the discovery of early aspects is achieved by a clustering algorithm to locate groups of goals in which goals in each group response to a set of use cases in a similar way. The grouping of a goal into a goal cluster is determined by the values measured by the goal's similarity to the goals in the cluster (see SA and SB in Fig. 4). The higher a similarity degree from a goal cluster to a goal, the higher the likelihood that the goal behaves similarly to the goals in the goal cluster. Fig. 4 depicts the concept of similarity used in the proposed approach, in which the similarity degree is measured by subtracting the summation of the difference between the score of goals wrt a designated use case by 1 (detail definition can be found in Section 3.3.) In this work, the relationships among goals such as interaction and similarity are represented numerically to make easy the processing of all the relations computationally, and to facilitate the discovery of early aspects by investigating the common properties shared by goals. In what follows, to further elaborate the GEA process, we first outline the system architecture of GEA to give an overview of the key components in this work in Section 3.1. The details on how to evaluate the relationships among use cases and goals, to obtain goal relationships, and to establish goal clusters are depicted in Sections 3.2, 3.3, and 3.4, respectively. The design of our ArgoUML-based supporting tool that eases up the discovery of early aspects is described in Section 3.5. In Section 3.6, the identification of the early aspectual candidates is presented along with a 4-step guideline for determining early aspects. Finally, the comparison of our previous work and the proposed approach is discussed in Section 3.7.

3.1 System Architecture of Aspect-Enhanced GDUC In GEA (see Fig. 5), there are three subsystems, including Goal-driven Use Case Modeling, Goal-Clustering, and Early-Aspect-Identification. User requirements are

analyzed and modeled as goals and use cases to enable the evaluation of goal and use case relationships, which are further transformed into interaction degree and similarity degree in a pairwise manner for all the goals in the Goaldriven Use Case Modeling subsystem. The interaction and similarity degrees are used as inputs to the Goal-Clustering subsystem where cluster matrices are established as a basis for generating goal clusters by means of similarity degree, whilst the interaction degree is served as a validation criteria for the formation of each goal cluster generated. In the end of the clustering algorithm, early aspectual candidates are high-lighted in a frequency-based manner for developers to identify early aspects in Early-Aspect-Identification. In Goal-driven Use Case Modeling, the user requirements are analyzed and expressed as goals by using the goals structure in a six-tuple form. Use cases are established to achieve/optimize these goals. Relationships between goals and use cases are characterized as predicates: satisfied, satisfiable, denied, deniable, and independent, to describe the effects of use cases on goals. The computation of the relationships among goals are re-formulated by changing the predicates from qualitative terms, such as fully satisfied, largely satisfied, partially satisfied, not affected, partially denied, largely denied, and fully denied, to numerical representation of relations among goals ranging from À5 to 5 as shown in Table 1. Interaction degree and similarity degree are calculated in a pairwise manner. The interaction degree of a pair of goals is defined as a fuzzy union of cooperative and conflicting degrees between goals. Meanwhile, the similarity degree of a pair of goals is defined as the summation of the satisfying and denying degrees that each use case contributes to the two goals in each pair. The larger the result of summation, the more different the two goals are. In Goal-Clustering, the clustering algorithm begins with initializing a cluster matrix of goals, which is followed by selecting goals to be grouped into a goal cluster with the use of similarity degrees, and finally to validate the formation of each grouping by using interaction degree. A goal cluster groups goals/goal clusters with the highest similarity degree. The grouping of goals/goal clusters is then validated with the interaction degree, which is defined as the

