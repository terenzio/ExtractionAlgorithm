J. Lee et al.: A Possibilistic Petri-Nets-Based Service Matchmaker for Multi-Agent System Architecture

205

4.2 SAM-ASDL: Agent Service Description Language in SAM Agent service description language (ASDL) plays an important role in facilitating the middle agent to capture the content in a message and to match appropriate services for the request agents. Therefore, the agreement in the use of a common ASDL, which defines a syntactical specification of publishing and requesting services, is the key to understanding and automatic processing requests and services of agents. A number of recent developments of service description languages have been proposed, for example: A service description language in InfoSleuth [7] consists of four fragments: conversation ontology, language ontology, service ontology and domain ontology. LARKS [27] is a frame-like specification with thefollowing slots: context keywords, variable types, input and output variables, logical constraints on input and output variables, and ontological descriptions of keywords. A service description language in IMPACT [3] comprises three parts: a service name, typed input and output variables, and attributes of services. The specification of CDL [29] is to some extent similar to LARKS with the following components: service name, inheritance relation, input and output variables, logical constraints on input and output variables, and a special constraint across input and output variables. DAML-S [1] is a DAML+OIL based web service ontology that has three main parts: the service profile, the process model, and the grounding. To fulfill the requirements of a service description language setup for SAM, we have extended our previous work on PPN-ASDL by means of DAML-based services description ontologies. The foundation of the ASDL developed in SAM, called SAM-ASDL, is made up of two main ontologies: the generic service profile ontology and the service grounding ontology. The generic service profile ontology contains basic concepts needed to be described in a service. A specific service profile ontology specializes these concepts for a specific service domain. These specific concepts are used by service agents to advertise services and by request agents to describe the services needed. In general, the generic service profile ontology (see figure 5) defines concepts and property for describing the following data: Service related information: It describes the general attributes about a service, included its name, description and service category. Provider related information: It is used to annotate the provider of a service. The data described are its name, description, contact information, and

web site URLs. Variables: There are three types of variables: input variable, output variable and condition variable. During the invocation of services, the service agents or web services need the input variables to perform the services and produce the output variables for the request agents. Condition variables are used as decorators to describe additional attributes of a service. A condition variable can be either an input variable or an output variable. In order to describe the services more precisely, we group the specialized variables into domains for better usage. Conditions: Agents or web services use the conditions to describe the services they provide or need. A condition is made up of an instance of a specialized condition variable and a value of condition type. The middle agent processes these conditions to perform PPN-based service matchmaking.

Figure 5. Generic Service Profile Ontology

Matchmaking related information: We use a set of properties, included the message type of this document, the type of a service, searching criterion, and etc., to provide additional information used by middle agent in processing related tasks. The service grounding ontology provides information for service invocation. After obtaining the matched services from the middle agent, request agents can utilize the information to further process requested services. The main portions of the service grounding ontology (see figure 6) are depicted below: Agent grounding: It is used to indicate that the service is provided by a service agent, which contains several attributes about the location of a agent, its name, the tasks it performs, and the token it needs. Tokens refer to the input or output variables used in the specific service profile

