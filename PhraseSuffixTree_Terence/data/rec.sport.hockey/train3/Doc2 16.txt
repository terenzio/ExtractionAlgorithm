LEE AND HSU: GEA: A GOAL-DRIVEN APPROACH TO DISCOVERING EARLY ASPECTS

599

TABLE 7 Comparison of Works on Early Aspects

TABLE 8 Relationships between Use Cases and Early Aspects

AspectU [43] is an aspect language for modularizing crosscutting concerns within a use-case model, and extends the use case model with support for modularizing crosscutting behavior. It introduces an aspect entity structured similarly to an aspect in AspectJ that comprises of pointcuts and advice. Moreira et al. [44] present a model to identify and specify quality attributes that crosscut requirements, including the integration of quality attributes, into the functional description at an early stage of the software development process. A model of the crosscutting behavior is devised to consider a quality attribute in a new stereotype use case, and made the base use cases include the stereotype use case. Araujo et al. [50] adopt the concepts of overlapping, overriding and wrapping operators to compose functional requirements with aspects that crosscut non-functional requirements. A non-functional requirement crosscuts if it affects more than one use case. They model these aspects by defining new stereotype use cases, and adopted the stereotype relationships (wrappedBy ) to connect those wrapped use cases to the crosscutting use case. Table 8 summaries the works contribute to the relationships between use cases and early aspects along with the proposed approach. Differ from the above methods, use cases in our proposed approach are used as a means to derive relationships among goals, such as similarity and interaction degrees, and to group goals into goal clusters based on the two degrees. Similar attempt of identifying early aspects has been proposed in our previous work [33], where early aspects are discovered in a possibility based approach. However, the effort on the computation of early aspectual candidates could cost considerable resources and time, which diminishes the usability of that approach.

5.3 Relationships between Crosscutting Concerns There are other researches that aim to identify separation of concerns during the requirement analysis phase, in which the analysis of functional or non-functional requirements is used to lead the discovery of aspects. In [9], Cosmos provides a general-purpose concern-space modeling schema for modeling logical and physical concerns, in which logical concerns can be further distinguished into classifications, classes, instances, properties, and topics while physical concerns includes instances, collections, and attributes. Four categories of relationship are also identified in Cosmos, including categorical, interpretive, mapping, and physical. By providing concern-space modeling schema, Cosmos can be used to support many software development tasks, such as rationale capture, impact analysis, change propagation, and software composition and decomposition. In [46], Yu et al. propose to use a goal model to discover aspects from relationships among goals, in which functional and non-functional requirements are represented through goals and softgoals along with their tasks that contribute to their satisfaction. The model is then further analyzed to identify aspects by detecting the tasks that contribute to some soft goals while also satisfying some functional goals. There is a limitation that it only identifies soft goals as aspects without considering the rigid goals, which could also be the source of aspects. In [45], an approach that supports the establishment of early trade-off among crosscutting and overlapping requirements is proposed to facilitate negotiation and decision-making among stakeholders. In the approach, it treats all concerns in a uniform fashion, that is, concerns in the model imply any coherent collection of requirements and can support multidimensional separation of concerns at requirements level. In [16], a uniform treatment of concerns is proposed at requirement engineering level, which is based on the observation that concerns in a system are a subset, and concrete realization, of abstract concerns in a meta concern space. The notion of a compositional intersection that allows choosing appropriates sets of concerns in multi-dimensional separation as a basis to observe trade-offs among other concerns is introduced in their work, which provides a rigorous analysis of requirements-level trade-offs to satisfy a particular functional or non-functional concerns.

