LEE AND HSU: GEA: A GOAL-DRIVEN APPROACH TO DISCOVERING EARLY ASPECTS

593

Fig. 10. User interface of editing the relationships among goals and use cases of the meeting scheduler system.

Mappers group goals into goal clusters represented in GCIR from HBase Temp Table and store results back to HBase Temp Tables using GCIR format. Goal Mapper takes CMs as its input and is denoted as < X; GCIR > , where X means don't care and outputs < K2; V 2 > as < Tablename; GCIR > . If the process of a CM is finished, the output goes to the HBase Final Result Table, otherwise, it goes back to the HBase Temp Table and waits for further processing. For example, a clustering matrix of size 6 Ã 6 is to be processed, then it can be represented as 1P 2P 3P 4P 5P 6. If the goal mapper groups G2 and G3, then a new GCIR 1P 2G3P 4P 5P 6 will be constructed as V 2 and put back to HBase Temp Table. Furthermore, if there is another possible grouping of goals, said G2 and G4, is to be grouped, then another GCIR 1P 2P 3G4P 5P 6 will also be constructed as V 2 and put back to HBase Temp Table, which causes a CM to generate multiple GCIRs (i.e., CMs) for further deviation. When a CM has been marked finished, it will be put into another table, the HBase Final result Table. Result Mapper reads data from the HBase Final Result Table and transforms it into < K2; V 2 > : < GoalClustersinGCIR; 1 > which is then further processed by Result Reducers to accumulate the total number of the occurrence of each goal clusters to obtain the final results, the occurrence frequency of each goal cluster grouped. By applying MapReduce and HBase, CMs in the queue (see Fig. 7) can be processed in parallel by different Mappers, which improves the performance of the clustering algorithm. In other words, if the number of Mappers increases, the time needed to complete the clustering algorithm decreases.

Features of the extended ArgoUML tool include: draw use case diagrams and establish a relationship matrix. As shown in Fig. 10, the relationship of each pair of goal and use case determined by the developers is entered with a pull down menu containing all the possible relationships, such as fully satisfied, largely to fully satisfied, largely satisfied, partially to largely satisfied, partially satisfied, irrelevant, partially denied, partially to largely denied, largely denied, largely to fully denied, and fully denied. The evaluation of the effect from a use case to a goal is determined by developers and can be subjective. In the end of the computation in the clustering algorithm, a final result is shown directly under the relationship matrix along with the frequency of the occurrence of each goal cluster appearing in all derived system states. For example, a goal cluster followed by 50.00 percent on the screen in Fig. 10 indicates that goals with a total number of 100 final system states that are derived, goals in the goal cluster are grouped together for 50 times.

3.6 Identification: Identify Early Aspectual Candidates Refer to the meeting scheduler system (see Fig. 10), by applying the clustering algorithm, eight goal clusters can be identified along with percentage frequency of occurrence, namely, (GRM , GAED ): 50 percent, (GMI , GAP ): 100 percent, (GRM , GDP ): 50 percent, (GMHP , GDRH ): 100 percent, (GMP , GMR ): 100 percent, (GSF , GKPC , GSR ): 100 percent, (GAED , GWM , GEPR , GMU ): 50 percent, and (GDP ,GWM , GEPR , GMU ): 50 percent. Among these goal clusters, it is noted that some of the possibility values of the frequency of occurrence are

