J. Lee et al.: A Possibilistic Petri-Nets-Based Service Matchmaker for Multi-Agent System Architecture

207

domain. Domain-specific ontologies: All domain specific concepts are defined in each domain-specific ontology. This ontology contains other semantic relations [6, 11], for examples part/whole or relevancy, used by the DAML+OIL inference engine to calculate the similarity among these concepts for PPN matchmaking engine. An HTML page can be generated dynamically by performing an ontological reasoning over the concepts defined in a specific service profile ontology to guide the user to fill in an SAM-ASDL document for requesting or publishing a service. The DAML+OIL inference engine implemented by DAMLJessKB [17] uses the domain specific ontologies to derive the similarity between concepts. Relations between concepts provide the pre-defined relevancy values. The semantic relation path is a directed path composed of the same type of relations from one concept to the other one. Calculating the similarity between two concepts is performed by multiplying the relevancy values of the relations which constitute the semantics relation path. The maximum similarity is chosen in the case that there exist multiple semantic relation paths between two concepts. Consider the hotel reservation example, a portion of domain specific ontology that describes the relations is shown in Figure 9, and the similarity between Taipei and Taichung is 0.76, which is the result of multiplying 0.95 and 0.8.

4.2. In this section, the translation mechanism between the middle agents and UDDI registries is fully discussed.

Figure 10. Mapping SAM-ASDL to UDDI with newly-defined Models

Figure 9. An example of (a) Room Type Choice, and (b) Location Choice concepts hierarchy and relevancy defined in a domain specific ontology

4.4 SAM-ASDL Translator The SAM-ASDL translator is designed to bridge the linkage between the public UDDI registries and middle agents. There are three issues involved in developing this translator: (1) how to fill in the extended semantic information captured in SAM-ASDL to UDDI data specification, (2) how to utilize the filled in semantics information to facilitate the locating and converting of SAM-ASDL based services profiles registered in UDDI registries, and (3) how to represent and reason the process model of the operations resided in a web services. We have discussed the third issue in the design of service grounding ontology of SAM-ASDL in section

The data model defined in the UDDI specification is insufficient to carry semantics information for the services published [10, 24]. Fortunately, the tModel data model designed in the specification of UDDI is useful in specifying additional attributes of the entities in the UDDI registry. To publish SAM-ASDL profiles in UDDI registry, we have defined a number of tModels, see figure 10 for this mapping. These tModels help keep SAM-ASDL specific information in the UDDI registry, which are defined as follows: serviceCategory_tModel: specify the service category of the web service. InputVariable_tModel: specify the input variables of the web service. OutputVariable_tModel: specify the output variables of the web service. ConditonVariable_tModel: specify the condition variables of the web service. hasValue_tModel: specify the restricted type and value of the variables. conditionType_tModel: specify the condition type of the condition. WebURL_tModel: specify the url refers to the web site as the front-end user interface of the web service. InstructionURL_tModel: specify the url refers to the instruction document that describes the process model of operations resided in the web service. SAM-ASDL_tModel: information published by the service is compliant with the data model of

