J. Lee et al.: A Possibilistic Petri-Nets-Based Service Matchmaker for Multi-Agent System Architecture

211

Improving the functionality of UDDI registries through web services semantics. Springer-Verlag Berlin Heidelberg, 2002. [11] P. Fabriani, M. Missikoff, and P. Velardi. Using text processing techniques to automatically enrich a domain ontology. In Proc. of ACM International Conference on Formal Ontology in Information Systems, Boston, 17-19 October, 2001. [12] A. F. Garcia and C. J. P. de Lucena. Software enginering for large-scale multi-agent systems ­ selmas 2002: Workshop report. Software Engineering Notes, 27(5):82­88, 2002. [13] J. Graham, K. Decker, and M. Mersic. Decaf - a flexible multi agent system architecture. Kluwer Academic Publishers, 2001. [14] J. Hendler. Agents and the semantic web. IEEE Intelligent Systems, 16(2):30­37, 2001. [15] J. Hendler and D. L. McGuinness. The semantic web and its languages - the DARPA agent markup language. IEEE Intelligent Systems, 15(6):72­73, 2000. [16] N. Jenning. On agent-based software engineering. Artificial Intelligence, 2002. [17] J. Kopena and W. C. Regli. Damljesskb: A tool for reasoning with semantic web. In ISWC 2003. [18] J. Lee, K. F. Liu, and W. Chiang. Modeling uncertainty reasoning with possibilistic petri nets. IEEE Trans. on System, Man, and Cybernetics: Part B, 33(2):214­224, February, 2003. [19] J. Lee, K. F. Liu, Y. C. Wang, and W. Chiang. Possibilistic petri nets as a basis for agent service description language. Fuzzy Sets and Systems, 144(1):105­126, May, 2004. [20] D. Martin, A. Cheyer, and D. Moran. The open agent architecture: A framework for building distributed software systems. Applied Artificial Intelligence, 13:91­128, 1998. [21] K. S. Nicholas R. Jennings and M. Wooldridge. A roadmap of agent research and development. Automous Agents and Multi-Agent Systems, (1):7­38, 1998. [22] M. Nodine, J. Fowler, T. Ksiezyk, B. Perry, M. Taylor, and A. Unruh. Active information gathering in infosleuth. Cooperative Information Systems, 9(1/2), 2000. [23] OASIS. Using wsdl in a uddi registry, version 2.0.2, http://www.oasis-open.org/committees/uddispec/ doc/tn/uddi-spec-tc-tn-wsdl-v202-20040631.htm. [24] M. Paolucci, T. Kawmura, T. Payne, and K. Sycara. Semantic matching of web services capabilities. In First Int. Semantic Web Conf. (ISWC 02), 2002. [25] K. Sycara. Multi-agent infrastructure, agent discovery, middle agents for web services and interoperation. In ACAI, number LNAI 2086, pages

17­49. Springer-Verlab Berlin Heidelberg, 2001. [26] K. Sycara, J. A. Giampapa, B. Langley, and M. Paolucci. The retsina, a case study. In SELMAS, number LNCS 2603, pages 232­250. Springer-Verlab Berlin Heidelberg, 2002. [27] K. Sycara, J. Lu, M. Klusch, and S. Widoff. Dynamic service matchmaking among agents in open information environment. In volume 28, ACM SIGMOD Record, 1999. [28] K. Sycara, J. Lu, M. Klusch, and S. Widoff. Matchmaking among heterogeneous agents on the internet. In AAAI Spring Symposium on Intelligent Agents in Cyberspace, 1999. [29] G. J. Wickler. Using expressive and flexible action representation to reason about capabilities for intelligent agent cooperation, Ph.D. dissertation of University of Edinburgh, 1999. [30] H. C. Wong and K. Sycara. Taxonomy of middle-agents for the internet. In Proc. of the Fourth International Conference on MultiAgent Systems, pages 465­466, Nagoya, Japan, July, 2000.

Appendix A Specification of Generic Service Profile Ontology in SAM-ASDL
The detail of each concept and property defined in the generic service profile ontology of the SAM-ASDL are as follows: Profile: The class Profile serves as a superclass of high-level description of the service published or requested. It contains a set of relations that describe different attributes of a service. These relations are expressed by the properties serviceName, serviceDescription, serviceCategory, hasProvider, hasVariable, hasCondition, messageType, source, searchBy, and requestType. When issuing a request, the properties including serviceName, serviceDescription, serviceCategory, and source can be ignored in an ASDL document for requesting. And in an ASDL document for publishing, the property searchBy is ignored. - serviceName refers to the name of a service published. It is used to distinguish different services published by the same service provider. - serviceDescription provides a brief description of a service. Any information for human reading can be described in it. - serviceCategory refers to the service category that the service belongs to. In SAM, a categorization scheme is used for maintaining service registry and performing service matchmaking easily.

