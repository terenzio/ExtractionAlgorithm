594

IEEE TRANSACTIONS ON SOFTWARE ENGINEERING,

VOL. 40,

NO. 6,

JUNE 2014

not equal to 100 percent, which suggests that developers should set a threshold to determine how strong the likelihood is of a goal cluster to become an early aspectual candidate. If the threshold is set to 60 percent, then four goal clusters: (GRM , GAED ), (GRM , GDP ), (GAED , GWM , GEPR , GMU ) and (GDP ,GWM , GEPR , GMU ), will be filtered out. This will leave us only four early aspectual candidates in the meeting scheduler system, namely, (GMI , GAP ), (GMHP , GDRH ), (GMP , GMR ), and (GSF , GKP C , GSR ). To determine early aspects from early aspectual candidates, the following 4-step guideline is suggested: Examine the description of goals in an early aspectual candidate for common objectives shared by these goals. 2) Check the description of use cases associated with goals in an early aspectual candidate (that is, a goal cluster) for similar behaviors shared by these use cases. 3) Inspect base courses and extension courses of use cases associated with goals in an early aspectual candidate for similar effects that achieve, maintain or optimize goals either directly or through side effects in the early aspectual candidate. 4) Consider the findings obtained in the above three steps, which can be served as a basis for common properties or important stakeholders' concerns and can be used to derive early aspects. For example, GMHP (Meeting Handle in Parallel) is achieved by performing use case "Fork multiple threads" and GDRH (Decentralized Requests Handled) is achieved by performing use case "Authorize Users". These two goals are derived from the problem statements "The system must in general handle several meeting requests in parallel" and "The system accommodates decentralized requests from initiators that have been authorized". By reviewing the scenarios of the two use cases associated to GMHP and GDRH , it is found that they both address the issue of maximize the number of meeting planned. Therefore, an early aspect named "Max. Number of Meeting" is discovered to crosscut the two goals. In the proposed approach, early aspects are denoted as EarlyAspect: (UCa , ½Goal1 , Goal2 , . . . , Goaln ), where EarlyAspect denotes the name of an early aspect; UCa denotes the use case that realizes the early aspect with a recurring property or important stakeholders' concerns that are derived from goals formulation; and ½Goal1 , Goal2 , . . ., Goaln  denotes the goals that have been crosscut by the early aspect. The four early aspectual candidates in the meeting scheduler system, namely, EarlyAspectAP that crosscuts GMI and GAP through performing the use case "Keep Performance", EarlyAspectMNMP that crosscuts GMHP and GDRH through executing the use case "Max. Number of Meeting", EarlyAspectFP that crosscuts GMP , and GMR through performing the use case "Flexible Planning", and EarlyAspectVPC that crosscuts GSF , GKPC and GSR through executing the use case "Verify Program Correctness" are denoted as EarlyAspectAP : (Keep Performance, [GMI , GAP ]) 1)

EarlyAspectMNMP : (Max. Number of Meeting, [GMHP , GDRH ]) EarlyAspectFP : (Flexible Planning, [GMP , GMR ]) EarlyAspectVPC : (Verify Program Correctness, [GSF , GKPC , GSR ]). The benefit of the proposed approach is that it makes easy for developers to identify early aspects by focusing only on the relationships between goals and use cases in a pairwise fashion. Furthermore, the results delivered to developers are represented in a frequency-based way, which allows developers to cut a threshold to determine how strong the likelihood is of an early aspectual candidate containing an early aspect. If a target system to be modeled contains a fairly large number of goals, it may overwhelm developers in entering all the relationships between goals and use cases, which is of Oðn2 Þ complexity (n is the total number of goals). It is also likely that users could have neglected or missed some of the interactions in conducting the pairwise comparison. To reduce the impact, all the possible early aspectual candidates will be explored based on the interactions captured in the goals and use cases.

3.7 Comparing with Our Previous Work Comparing with our previous work [33], the enhancement of this work is focused on the improvement of the clustering algorithm by reducing the time complexity to a computationally manageable level. In our previous work, the clustering of goals (i.e., the bidding process) begins with the bidding of goals to form a goal cluster, followed by the checking of total interaction degrees of all goal clusters, and finally through the use of scattering and tangling degrees to validate each bid. That is, goals are bid by goal clusters one at a time. Each time a goal is to be bid by goal clusters, the similarity of the goal and goal clusters are computed. For n goals, it costs Oðn2 Þ time to compute the similarity of all goals and all goal clusters. The highest score of similarity is picked and the associated goal cluster is the winner of the bid. The goal is grouped with the winning goal cluster. A stability function is performed to serve as a check-and-balance mechanism in the clustering, which engages total interaction degree for checking the validity of the bidding and scattering degrees together with tangling degrees for balancing the total number of goal clusters. If there are multiple winning goal clusters, the derivation will be processed concurrently. If there is only one highest score of similarity in each bidding, it gives the time complexity of Oðn3 Þ for the best case scenario since there are n goals to be bid. However, if the scores of similarity of goals to goal clusters in each round of bidding are all equal, it generates n Ã n concurrent derivations at the first round of bidding and n Ã n Ã ðn À 1Þ Ã ðn À 1Þ concurrent derivations at the second round of bidding, and so on, which results in a total of Oðnn Þ time complexity for the worst case scenario. As a result, when the number of goals increases, the number of bids will also increase. This will cause a cascading effect on the performance of the bidding algorithm. In this work, a similarity matrix and interaction relation matrix of all goals are constructed prior to each round of

