200

International Journal of Fuzzy Systems, Vol. 7, No. 4, December 2005

The RETSINA [25, 26] (Reusable Environment for Task Structured Intelligent Networked Agents) multi-agent infrastructure has been developed by the Intelligent Agents Group at Carnegie Mellon University, USA. It is an open multi-agent system that provides infrastructure for different types of deliberative, goal directed agents: Interface agents, task agents, middle agents and information agents. Agents can communicate and interact among themselves with the infrastructure components, such as MAS management services, performance services, security services, agent name services (ANS), matchmaker, and RETSINA-OAA interoperator. Each agent is composed of four 2. Related Work on MAS Infrastructures autonomous functional modules: a communicator, a Recently, a significant number of MAS infrastructures HTN (hierarchical task network) planner, a scheduler have been proposed to tackle various issues encountered and an execution monitor. The four modules of a in their efforts of advancing agent technology. The focus RETSINA agent are implemented as autonomous of each MAS varies, including information gathering, threads of control to allow concurrent planning and collaboration, and etc.. We have identified not only the actions scheduling and execution. RETSINA treats individual agents as "socially aware" focus of each MAS, but also key features, especially on service matchmaking and interoperability mechanisms, programs that communicate, interact among themselves that are useful in distinguishing these MASs: agent types, with the infrastructure components, such as ACL services types, service description language (SDL), infrastructure, MAS management services, performance mediation protocol, matching algorithm, query services, security services, agent name services (ANS), processing, matching facilities and heterogeneous matchmaker, and RETSINA-OAA interoperator. interoperability. Before looking into the detail RESINA explicitly distinguishes between the two comparisons in table 1, we briefly examine each MAS at services: ANS and matchmaker. The matchmaker maps capabilities into agents, and the ANS maps agents to first. locations. Decoupling the two services is justified by the fact that agent discovery by name is a system-level Table 1. Comparison between Service Matching and service, whereas capability-based lookup is a service at Interoperability Mechanisms on MASs the knowledge level. SAM RETSINA IMPACT InfoSleuth OAA DECAF To describe agents' capabilities in the matchmaking Service - Agent Services - Agent Services - Agent - Agent Services - Agent - Agent Types - Web Services - Legacy Services - Legacy Services Services process, RETSINA have defined and implemented an - Legacy Systems Systems - Legacy Systems - Legacy - WWW Systems - WWW Systems ACDL (Agent Capability Description Language), called HTML-like Infosleuth ICL (PROLOG Keywords LARKS ASDL SAM-ASDL language ontology - based /ACDL (PPN-based and (frame-like LARKS (Language for Advertisement and Request for language) language) DAML-based ontologies) - Agent - Yellow-pages -Broker Agents Facilitator - Agent Name Mediation Middle Agents Knowledge Sharing) [27, 28]. LARKS is wrapped in a Name - Task Planning Agents Servers Services InfrastruServices Agents - Middle Agents - Registration cture KQML-like message and is a frame-like specification - Middle - Ontology Servers Agents Agents with the following slots: context keywords, variable - Brokers Structural - Task -K-nearest - TF-IDF filter Keyword Matching - Possibilistic types, input and output variables, logical constraints on matching matching neighbor - Plug-in filter based Algorithm Reasoning - Request request - Type inference searching - Possibilistic input and output variables, and ontological descriptions - D-range filter Petri-Net based decomposition search - Constraint matching of keywords. RETSINA with LARKS contains five matching filter - Concept subsumption different filters to take both syntactic and semantic filter matching into account. - Functional - Functional - Functional -Functional - Functional Matching - Functional match match match match match Feature match The IMPACT (Interactive Maryland Platform for - Syntactical -Syntactical - Non-functional - Syntactical match match match match (user Agents Collaborating Together) [2] platform has been - Semantics/Sim -Semantics / - Semantics / preferences) ilarity match Similarity Similarity - Syntactical match match match developed at the university of Maryland, College Park, - Semantics / Similarity USA. The principal goal of the IMPACT project is to match (uncertainty) develop both a theory and a software implementation Not mentioned - Agent library Not -Agentization -RETSINA Heteroge- - Agent as mentioned (for (for OAA wrapper (for neous that facilitates the creation, deployment, interaction, and agentifying interoperating Interoperator interacting Interoperlegacy with legacy and DARPAwith legacy ability collaborative aspects of software agents in a systems) systems) GRID (for systems and interoperating WWW) heterogeneous, distributed environment. For this purpose with other - SAM-ASDL MASs) translator and SOAP runtime IMPACT provides following set of services as an (for consuming Web services) infrastructure upon which different IMPACT agents may integrating of various multi-agent systems are outlined and compared in the next section. In section 1, the proposed multi-agent system, namely SAM, and its constituents are briefly introduced. In section 4, the making of a PPN-based service matchmaker, which is built inside a middle agent in SAM, is delineated in detail. In section 5, the problem domain of advanced traveling information system is used as an illustrative example to demonstrate the proposed approach. Finally, we conclude and give future plans for extending the work of service matchmaking in SAM.

